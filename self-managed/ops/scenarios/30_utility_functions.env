#!/usr/bin/env bash

# ++-----------
# ||   20 - Infrastructure related functions and variables
# ++------

# ++-----------------+
# || Variables       |
# ++-----------------+


# ++-----------------+
# || Functions       |
# ++-----------------+

## Scenarios 00 01 02 03 04 05 are 
## the ones used and developed for the GS tutorial series so
## they have to remain consistent.
base_scenarios_check() {

  header1 "Comparing Base Scenarios"

  BASE_SCENARIO="00"

  for i in `seq -f0%g 00 05`; do

    CURRENT_SCENARIO="${i}"
    BASE_SCEN_FOLDER=`_locate_scenario ${BASE_SCENARIO}`

    if [ "${BASE_SCENARIO}" -eq "${CURRENT_SCENARIO}" ] ; then
      if [ -d  "${BASE_SCEN_FOLDER}" ]; then
        log_ok "Base scenario folder found: '${BASE_SCEN_FOLDER}'"
      else
        log_err "Scenario '${BASE_SCENARIO}' folder: '${BASE_SCEN_FOLDER}' not found."
        exit 1
      fi
    else

      CURR_SCEN_FOLDER=`_locate_scenario ${CURRENT_SCENARIO}`

      if [ -d  "${CURR_SCEN_FOLDER}" ]; then
        header2 "Comparing `basename ${CURR_SCEN_FOLDER}` with `basename ${BASE_SCEN_FOLDER}`"
        
        DIFF_SCEN=`diff -sq "${CURR_SCEN_FOLDER}" "${BASE_SCEN_FOLDER}"`

        DIFF_DIFF=`echo "${DIFF_SCEN}" | grep differ`
        DIFF_EQ=`echo "${DIFF_SCEN}" | grep identical`
        DIFF_ONLY=`echo "${DIFF_SCEN}" | grep Only`

        ## Identical files are good. Ideally two consecutive 
        ## scenarios should differ only in the solve/check scripts
        ## and in the new files introduced by the latest one.
        if [ ! -z "${DIFF_EQ}" ]; then
          echo -e "\033[1m\033[32m[ Equal ] \033[0m\033[1m" 
          for i in `echo "${DIFF_EQ}" | awk '{print $2}'`; do
            echo -e "  "`basename $i`
          done
        fi
        
        ## Different files are generally a bad thing.
        ## With the exception of solve/check scripts that are
        ## expected to be different on different scenarios,
        ## all the different scenario files are something that
        ## should not happen because it introduces discrepancies
        ## that might affect tutorials' correctness.
        if [ ! -z "${DIFF_DIFF}" ]; then 
          
          ## Checkd for OPS files that differ and includes them into
          ## the healthy files. Allowed differnt files are listed in the
          ## array below.
          OPTIONAL=("solve.sh" "check.sh")
          
          LIST_STRING=""
          for i in `echo "${DIFF_DIFF}" | awk '{print $2}'`; do
            FILENAME="`basename ${i}`"
            if [[ "${OPTIONAL[*]}" =~ "${FILENAME}" ]]; then
              # whatever you want to do when array doesn't contain value
              LIST_STRING="${LIST_STRING}\n  ${FILENAME}"
            fi
          done

          if [ ! -z "${LIST_STRING}" ]; then
            echo -en "\033[1m\033[32m[ OPS Diff ] \033[0m\033[1m"
            echo -e "${LIST_STRING}"
          fi 

          LIST_STRING=""
          for i in `echo "${DIFF_DIFF}" | awk '{print $2}'`; do
            FILENAME="`basename ${i}`"
            if [[ ! "${OPTIONAL[*]}" =~ "${FILENAME}" ]]; then
              # whatever you want to do when array doesn't contain value
              LIST_STRING="${LIST_STRING}\n  ${FILENAME}"
            fi
          done

          if [ ! -z "${LIST_STRING}" ]; then
            echo -en "\033[1m\033[31m[ Scenario Diff ] \033[0m\033[1m"
            echo -e "${LIST_STRING}"
          fi 
        fi

        ## Files existing only on one scenario are usually normal.
        ## The represent either:
        ## * A deprecated set of steps in case they only exist on base scenario
        ## * A new set of steps in case they only exist on current scenario
        if [ ! -z "${DIFF_ONLY}" ]; then
        # set -x
          LIST_STRING=""
          for i in `echo "${DIFF_ONLY}" | grep "${BASE_SCENARIO}" | awk '{print $4}'`; do
            # whatever you want to do when array doesn't contain value
            LIST_STRING="${LIST_STRING}\n  ${i}"
          done
          
          if [ ! -z "${LIST_STRING}" ]; then
            echo -en "\033[1m\033[33m[ Deprecated from ${BASE_SCENARIO} ] \033[0m\033[1m"
            echo -e "${LIST_STRING}"
          fi 

          LIST_STRING=""
          for i in `echo "${DIFF_ONLY}" | grep "${CURRENT_SCENARIO}" | awk '{print $4}'`; do
            # whatever you want to do when array doesn't contain value
            LIST_STRING="${LIST_STRING}\n  ${i}"
          done
          
          if [ ! -z "${LIST_STRING}" ]; then
            echo -en "\033[1m\033[33m[ New in ${CURRENT_SCENARIO} ] \033[0m\033[1m"
            echo -e "${LIST_STRING}"
          fi 
        fi

        BASE_SCENARIO="${CURRENT_SCENARIO}"
        
      else
        log_err "Scenario '${CURRENT_SCENARIO}' folder: '${CURR_SCEN_FOLDER}' not found."
        exit 2
      fi

      # echo "New Line"
    fi
  
    #  echo `_locate_scenario $i`

  done

  ## [debug] requires 10.scenario

  # _locate_scenario

  exit 0

}
